server {
    listen       portnumber;
    server_name  domain www.domain;

    rewrite ^ https://$host$request_uri permanent;
}

server {
    listen       443 ssl http2;
    server_name  domain www.domain;
    
    server_tokens off;

    # Enable HSTS. This forces SSL on clients that respect it, most modern browsers. The includeSubDomains flag is optional.
    # add_header Strict-Transport-Security "max-age=31536000";
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

    # add_header X-Frame-Options SAMEORIGIN;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    charset utf-8;

    #set same size as post_max_size(php.ini or php_admin_value).
    client_max_body_size 20M;

    ssl_certificate /etc/letsencrypt/live/domain/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/domain/privkey.pem;
	ssl_dhparam /etc/ssl/certs/dhparam.pem; # openssl dhparam -out /etc/nginx/dhparam.pem 4096
     
    # Set caches, protocols, and accepted ciphers. This config will merit an A+ SSL Labs score.
    ssl_session_cache shared:SSL:20m;
  
    ssl_session_tickets off; # Requires nginx >= 1.5.9
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    # ssl_protocols TLSv1.3;# Requires nginx >= 1.13.0 else use TLSv1.2
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5';
    # ssl_ciphers EECDH+AESGCM:EDH+AESGCM;

    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_timeout  10m;

    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx => 1.3.7
    resolver 8.8.8.8 8.8.4.4 valid=300s; # resolver $DNS-IP-1 $DNS-IP-2 valid=300s;
    resolver_timeout 5s; 

    access_log /log/nginx/filename.access.log main;
    error_log  /log/nginx/filename.error.log warn;
 
    # Django media
    location /media  {
        internal;
        gzip_static on;
        expires max;
        alias /www/py37/django_test/repo/media;
        #alias webroot/media;  # your Django project's media files - amend as required
        #include /etc/nginx/mime.types;
    }

    location /static {
        gzip_static on;
        expires max;
        alias /www/py37/django_test/repo/.static_root;
        #alias webroot/.static_root;  # your Django project's static files - amend as required
        #include /etc/nginx/mime.types;
    }

    location / {
        proxy_buffering off;        
        #client_max_body_size 2000m;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://appname:serviceport;
        proxy_redirect http:// https://;
        proxy_read_timeout 90;
    }
 
    # Allow Lets Encrypt Domain Validation Program
    location ^~ /.well-known/acme-challenge/ {
        allow all;
    }
 
    # Block dot file (.htaccess .htpasswd .svn .git .env and so on.)
    location ~ /\. {
        deny all;
    }
 
    # Block (log file, binary, certificate, shell script, sql dump file) access.
    location ~* \.(log|binary|pem|enc|crt|conf|cnf|sql|sh|key|yml|lock)$ {
        deny all;
    }
 
    # Block access
    location ~* (composer\.json|composer\.lock|composer\.phar|contributing\.md|license\.txt|readme\.rst|readme\.md|readme\.txt|copyright|artisan|gulpfile\.js|package\.json|phpunit\.xml|access_log|error_log|gruntfile\.js)$ {
        deny all;
    }
 
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
 
    location = /robots.txt {
        log_not_found off;
        access_log off;
    }
}


